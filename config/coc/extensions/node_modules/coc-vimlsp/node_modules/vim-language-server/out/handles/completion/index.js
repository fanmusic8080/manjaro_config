"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vscode_languageserver_1 = require("vscode-languageserver");
require("./function");
require("./builtinVariable");
require("./command");
require("./option");
require("./hasEnum");
require("./mapEnum");
require("./expandEnum");
require("./colorscheme");
require("./highlightArgKeys");
require("./highlightArgValues");
require("./identifier");
require("./autocmds");
var provider_1 = require("./provider");
var documents_1 = require("../../server/documents");
var config_1 = tslib_1.__importDefault(require("../../server/config"));
var util_1 = require("../../common/util");
var fuzzy_1 = tslib_1.__importDefault(require("../../common/fuzzy"));
var provider = provider_1.getProvider();
exports.completionProvider = function (params) {
    var textDocument = params.textDocument, position = params.position;
    var textDoc = documents_1.documents.get(textDocument.uri);
    if (textDoc) {
        var line = textDoc.getText(vscode_languageserver_1.Range.create(vscode_languageserver_1.Position.create(position.line, 0), position));
        var completionItems = provider(line, textDoc.uri, position, []);
        if (!config_1.default.snippetSupport) {
            return util_1.removeSnippets(completionItems);
        }
        var words = util_1.getWordFromPosition(textDoc, { line: position.line, character: position.character - 1 });
        var word_1 = words && words.word || '';
        if (word_1 === '' && words && words.wordRight.trim() === ':') {
            word_1 = ':';
        }
        // options items start with &
        var invalidLength_1 = word_1.replace(/^&/, '').length;
        return completionItems.filter(function (item) { return fuzzy_1.default(item.label, word_1) >= invalidLength_1; });
    }
    return [];
};
//# sourceMappingURL=index.js.map